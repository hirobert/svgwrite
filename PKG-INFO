Metadata-Version: 1.1
Name: svgwrite
Version: 1.0.1
Summary: A Python library to create SVG drawings.
Home-page: http://bitbucket.org/mozman/svgwrite
Author: Manfred Moitzi
Author-email: mozman@gmx.at
License: GPLv3
Download-URL: http://bitbucket.org/mozman/svgwrite/downloads
Description: 
        svgwrite
        ========
        
        Abstract
        ========
        
        A Python library to create SVG drawings.
        
        a simple example::
        
            import svgwrite
        
            dwg = svgwrite.Drawing('test.svg', profile='tiny')
            dwg.add(dwg.line((0, 0), (10, 0), stroke=svgwrite.rgb(10, 10, 16, '%')))
            dwg.add(dwg.text('Test', insert=(0, 0.2), fill='red'))
            dwg.save()
        
        for more examples see: examples.py
        
        Installation
        ============
        
        with pip::
        
            pip install svgwrite
        
        or from source::
        
            python setup.py install
        
        
        Documentation
        =============
        
          * http://packages.python.org/svgwrite
          * http://readthedocs.org/docs/svgwrite/
        
        send feedback to mozman@gmx.at
        
        svgwrite can be found on bitbucket.org at:
        
        http://bitbucket.org/mozman/svgwrite
        
        NEWS
        ====
        
        Version 1.0.1 - 08.06.2012
        
          * added inline stylesheets
          * added examples created by Lawrence Tattrie
        
        Version 1.0.0 - 27 May 2012
        
          * stable
          * tested with CPython 2.7, CPython 3.2, pypy-1.8
          * added script tag - thx to jmahmood
          * docs also available at: http://readthedocs.org/docs/svgwrite
        
        Version 0.2.4 - 30 December 2011
        
          * beta version
          * Python 2.7: all strings will be converted by the unicode() function, for
            strings containing none-ascii-characters use prefix ``u""`` or better
            use ``from __future__ import unicode_literals``, because this is
            Python 3 compatible.
          * tested with CPython 2.7, CPython 3.2, and PyPy 1.7
          * BUGFIX: color parsing accepts white spaces in ``rgb()`` like ``rgb(0, 0, 0)``
        
        Version 0.2.3 - 13 November 2010
        
          * beta version
          * Python 3.1 support
          * splitted examples.py into several files and moved them to
            the subdir 'examples'
        
        Version 0.2.2 - 05 November 2010
        
          * alpha version
          * removed 'attribs' parameter from all constructors
          * new elements: Set, Animate, AnimateMotion, AnimateColor,
            AnimateTransform, all filter elements
          * added set_desc(title, desc), set_metadata(xmldata) to BaseElement class
          * moved content of interfaces.py to mixins.py, (ITransform -> Transform and so on)
        
        Version 0.2.1 - 31 October 2010
        
          * alpha version
          * new elements: Marker, ClipPath, Mask
          * paint service: LinearGradient, RadialGradient, Pattern
        
        Version 0.2.0 - 24 October 2010
        
          * alpha version
          * validator rewritten as validator2.py
          * debug and profile options separated for each drawing object
          * important change: create objects with factory functions of the
            *Drawing* class: drawing.<svg-elementname>(...)
          * added mixins for setting stroke and fill properties
          * new elements: Hyperlink, Image, TextArea,
        
        Version 0.1.0 - 26 September 2010
        
          * alpha version
          * new elements:
        
            * basic shapes: Line, Rect, Circle, Ellipse, Polyline, Polygon, Path
            * text elements: Text, TSpan, TRef, TextPath
            * container elements: Group, Symbol, SVG, Use, Defs
        
          * for examples see: examples.py
        
Platform: OS Independent
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: GNU General Public License (GPL)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Intended Audience :: Developers
Classifier: Topic :: Multimedia :: Graphics
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Provides: svgwrite
